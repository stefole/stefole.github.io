{"title":"Week 1: Introduction to igraph","markdown":{"yaml":{"title":"Week 1: Introduction to igraph","date":"2025-09-04","description":"Learn the basics of network visualization with igraph for systems biology.","categories":["Basics","Visualization"],"image":"images/week1.png","format":{"html":"default"},"editor":"visual"},"headingText":"**Extended Pol δ network**","containsRefs":false,"markdown":"\n\n**TASK: Make a simple network in igraph**\n\n```{r}\nlibrary(igraph)\nlibrary(ggraph)\nlibrary(tidygraph)\n```\n\n```{r}\nhemoglobin <- data.frame(from = c(\"ALPHA_GLOBIN\", \"ALPHA_GLOBIN\", \"BETA_GLOBIN\"), to = c(\"ALPHA_GLOBIN\", \"BETA_GLOBIN\", \"BETA_GLOBIN\"))\ng <- graph_from_data_frame(hemoglobin, directed = FALSE, vertices = NULL)\nplot(g)\n```\n\n-   Make sure you understand what the NODES (the circles) and the EDGES (the lines) represent: what is the BIOLOGICAL interpretation of the network?\n\n    In this protein-protein interaction graph, each node represents a protein and each edge represents interaction between them.\n\n**TASK: create data frame for the polymerase sub-unit interactions and add attributes to igraph object:**\n\n```{r}\npolymerase_subunit <- data.frame(from = c(\"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD3_HUMAN\"), to = c(\"DPOD2_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\", \"DPOD4_HUMAN\"))\nps_attr <- data.frame(name = c(\"DPOD1_HUMAN\", \"DPOD2_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\"), GeneID = c(\"PolD1\", \"PolD2\", \"PolD3\", \"PolD4\"), Catalytic = c(\"yes\", \"no\", \"no\", \"no\"), Description = c(\n    \"DNA polymerase delta catalytic subunit\",\n    \"DNA polymerase delta subunit 2\",\n    \"DNA polymerase delta subunit 3\",\n    \"DNA polymerase delta subunit 4\"\n), AA = c(1009, 469, 466, 107))\np <- graph_from_data_frame(polymerase_subunit, directed = FALSE, vertices = ps_attr)\nplot(p)\nV(p)$Description\n\n```\n\n**TASK - use the node annotations for customizing visualization**\n\n```{r}\nggraph(p) +\n    geom_edge_link() +\n    geom_node_point()\n\n```\n\nWay to visualize protein-protein interactions? Definetly not – not a lot of information is represented.\n\n```{r}\nggraph(p) + geom_edge_link() + geom_node_point(aes(colour = Catalytic, size = AA)) + geom_node_text(aes(label = name), repel = TRUE)\n```\n\n\nFor the final part of the exercise we'll be working with set of **experimental data** centered around the Pol δ complex. Later in the course we will learn a lot of details about how such experimental data is generated, what strengths and weaknesses the different methods have, and how we can address the noise in the data.\n\nFor now it sufficient to note the following:\n\n-   The experiment has detected proteins that physically interacts with the PolD1-PolD4 complex we have just worked with.\n\n-   Both **stable** and **transient** interactions have been identified.\n\n-   The experiment shows **some** of the most likely interactions - additional experiments may find more.\n\n-   The data **may** contain false positive (proteins indicated to interact, while that is not true under real biological conditions).\n\n```{r}\npoldelta_extented_interactions <- data.frame(from = c(\"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD3_HUMAN\", \"DPOD3_HUMAN\", \"DPOD3_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\", \"DPOD4_HUMAN\", \"DPOD4_HUMAN\", \"DPOD4_HUMAN\", \"PRI1_HUMAN\", \"WRIP1_HUMAN\"), to = c(\"DPOD2_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\", \"S7A6O_HUMAN\", \"TREX2_HUMAN\", \"DNA2L_HUMAN\", \"PRI1_HUMAN\", \"PRI2_HUMAN\", \"WRIP1_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\", \"PDIP2_HUMAN\", \"BACD1_HUMAN\", \"WRIP1_HUMAN\", \"DNA2L_HUMAN\", \"PRI1_HUMAN\", \"PRI2_HUMAN\", \"DPOD4_HUMAN\", \"DNA2L_HUMAN\", \"PRI1_HUMAN\", \"PRI2_HUMAN\", \"DNA2L_HUMAN\", \"PRI1_HUMAN\", \"PRI2_HUMAN\", \"WRIP1_HUMAN\", \"PRI2_HUMAN\", \"WRIP1_HUMAN\"), confidence = c(1.00, 1.00, 1.00, 0.18, 1.00, 1.00, 1.00, 1.00, 0.52, 1.00, 1.00, 1.00, 1.00, 0.54, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.57, 1.00, 0.65))\ne <- graph_from_data_frame(poldelta_extented_interactions, directed = FALSE, vertices = NULL)\n\n\nggraph(e, layout = \"kk\") + geom_edge_link() + geom_node_point() + geom_node_label(aes(label = name), repel = TRUE)\n```\n\nLinear is not a suitable layout, because it loses out on clustering of interactions.\n\n**TASK - visualize the Node attributes**\n\n-   Node label - use GeneID\n\n-   Node color - color based on \"Role in replication\" (invent your own coloring scheme)\n\n-   Node shape - pick two shapes to represent whether the protein is known to bind to DNA\n\n    The graph design was done with ChatGPT this time.\n\n```{r}\nextended_attr <- data.frame(\n    name = c(\n        \"DPOD1_HUMAN\", \"DPOD2_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\",\n        \"BACD1_HUMAN\", \"DNA2L_HUMAN\", \"PDIP2_HUMAN\", \"PRI1_HUMAN\",\n        \"PRI2_HUMAN\", \"S7A6O_HUMAN\", \"TREX2_HUMAN\", \"WRIP1_HUMAN\"\n    ),\n    GeneID = c(\n        \"POLD1\", \"POLD2\", \"POLD3\", \"POLD4\",\n        \"PDIP1\", \"DNA2\", \"POLDIP2\", \"PRIM1\",\n        \"PRIM2\", \"SLC7A6OS\", \"TREX2\", \"WRNIP1\"\n    ),\n    Role_in_replication = c(\n        \"Polymerase\", \"Polymerase\", \"Polymerase\", \"Polymerase\",\n        \"Uncertain\", \"Helicase\", \"Uncertain\", \"Primase\",\n        \"Primase\", \"Uncertain\", \"DNA repair\", \"DNA repair\"\n    ),\n    Cellular_component = c(\n        \"Nucleus\", \"Nucleus\", \"Nucleus\", \"Nucleus\",\n        \"Nucleus\", \"Nucleus; Mitochondrion\", \"Nucleus\", \"Nucleus (Nucleoplasm)\",\n        \"Nucleus (Nucleoplasm)\", \"Nucleus\", \"Nucleus\", \"Nucleus\"\n    ),\n    DNA_Binding = c(\n        \"+\", \"+\", \"-\", \"-\",\n        \"-\", \"+\", \"+\", \"+\",\n        \"+\", \"-\", \"+\", \"-\"\n    ),\n    Description = c(\n        \"DNA polymerase delta catalytic subunit\",\n        \"DNA polymerase delta subunit 2\",\n        \"DNA polymerase delta subunit 3\",\n        \"DNA polymerase delta subunit 4\",\n        \"Polymerase delta-interacting protein 1\",\n        \"DNA replication helicase/nuclease 2\",\n        \"Polymerase delta-interacting protein 2\",\n        \"DNA primase small subunit\",\n        \"DNA primase large subunit\",\n        \"Probable RNA Pol II localization factor\",\n        \"3′→5′ exonuclease, DNA repair\",\n        \"Werner helicase-interacting protein 1\"\n    )\n)\n\ne <- graph_from_data_frame(poldelta_extented_interactions, directed = FALSE, vertices = extended_attr)\n\nggraph(e, layout = \"kk\") +\n\n    geom_edge_link() +\n\n    # NODES\n    geom_node_point(\n        aes(\n            colour = Role_in_replication,\n            shape  = DNA_Binding\n        ),\n        size = 6\n    ) +\n    geom_node_label(aes(label = GeneID), repel = TRUE, box.padding = 0.4) +\n\n    # Node color scheme\n    scale_colour_manual(values = c(\n        \"Polymerase\" = \"steelblue\",\n        \"Primase\"    = \"forestgreen\",\n        \"Helicase\"   = \"orange\",\n        \"DNA repair\" = \"purple\",\n        \"Uncertain\"  = \"gray40\"\n    ), na.translate = FALSE) +\n\n    # Node shape scheme (+ binds DNA, – does not)\n    scale_shape_manual(values = c(\"+\" = 16, \"-\" = 15), na.translate = FALSE) +\n\n    # Optional: hide edge legends\n    guides(edge_colour = \"none\", edge_alpha = \"none\", edge_width = \"none\") +\n\n    theme_void()\n\n```\n\nDoes it make sense that some of the proteins are not annotated to bind DNA yet are supposed to have a role in DNA replication? (For example DPOD3_HUMAN and DPOD4_HUMAN)\\\n\\\nYes, it does as some of these proteins are subunits of complexes that do bind DNA.\n\n\"**Catalytic vs accessory subunits**:\n\n-   *POLD1* (DPOD1_HUMAN) is the **catalytic subunit** of DNA polymerase δ, with DNA polymerase and exonuclease domains — it binds DNA directly.\n\n-   *POLD2, POLD3, POLD4* are **accessory subunits**. They don’t themselves have DNA-binding motifs but they **stabilize the catalytic subunit, anchor PCNA, or mediate interactions with other replication/repair factors**.\"\n\nEach edge in the Pol δ network represents a **protein-protein** interaction determined **experimentally**. A number of different pieces of information could potentially be associated with each interaction:\n\n-   Experimental method used.\n\n-   Whether the interaction is stable or transient.\n\n-   How much experimental support is there for the interactions (e.g. a single experiment, 3 experiments or 100+ experiments).\\\n\nYou may consider the following interpretation of the score:\n\n-   0.0 - 0.3 : poor experimental support\n\n-   0.3 - 0.9 : \"good enough\" experimental support\n\n-   0.9 - 1.0 : excellent experimental support\n\n**TASK - import and visualize network**\n\n-   Make an igraph object with the interactions, edge attributes, and node attributes\n\n-   Visualize the network with ggraph, adding some formatting of the edges continuously by the confidence score (color, width, or transparency are good options)\n\n-   Make a discrete vector based on the three categories above, and add reload the igraph object. Make three different colors, widths, line types, or whatever else you can come up with to make a visually pleasing and informative visualization.\n\n```{r}\nggraph(e, layout = \"kk\") +\n    geom_edge_link(\n        aes(\n            edge_colour = confidence,\n            edge_alpha = confidence,\n            edge_width = confidence\n        )\n    ) +\n    scale_edge_colour_gradientn(\n        colours = c(\"plum1\", \"mediumpurple3\", \"purple4\"),\n        values  = c(0, 0.3, 0.9, 1),\n        name    = \"Confidence\" # name for the edge colorbar\n    ) +\n    guides(edge_colour = guide_edge_colourbar(\n        title  = \"Confidence\",\n        ticks  = TRUE,\n        breaks = c(0.15, 0.6, 0.95),\n        labels = c(\"0.0–0.3 poor\", \"0.3–0.9 good\", \"0.9–1.0 excellent\")\n    )) +\n    scale_edge_alpha(range = c(0.2, 1)) +\n    scale_edge_width(range = c(0.3, 1.5)) +\n\n    # NODES\n    geom_node_point(aes(colour = Role_in_replication, shape = DNA_Binding), size = 6) +\n    geom_node_label(aes(label = GeneID), repel = TRUE, box.padding = 0.4) +\n    scale_colour_manual(values = c(\n        \"Polymerase\" = \"steelblue\",\n        \"Primase\"    = \"forestgreen\",\n        \"Helicase\"   = \"orange\",\n        \"DNA repair\" = \"purple\",\n        \"Uncertain\"  = \"gray40\"\n    ), na.translate = FALSE) +\n    scale_shape_manual(values = c(\"+\" = 16, \"-\" = 15), na.translate = FALSE) +\n    theme_void()\n\n```\n\nWhich do you prefer - continuous or discrete visualization of line colors? I prefer continuous\n\n**FINAL QUESTION - Re-evaluate the three \"uncertain\" proteins (BACD1_HUMAN, PDIP2_HUMAN, S7A6O_HUMAN)**:\n\nConsider the following points and make a conclusion based on the *combined evidence* on which of the three proteins are likely to be true interaction partners:\n\n-   The proteins they are interacting with.\n\n-   The experimental support for the interactions.\n\n-   Any biological information (any hints, basically) you may have picked up from skimming through the UniProt pages for each of the three proteins.\n\nBased on the experimental evidence, **BACD1_HUMAN, PDIP2_HUMAN** are true interaction partners. They both also interact with DPOD2_HUMAN, which is clearly involved. BACD1_HUMAN seems to be a co-factor for DPOD2_HUMAN. But **S7A6O_HUMAN** does not seem to be involved as the experimental support is very weak.","srcMarkdownNoYaml":"\n\n**TASK: Make a simple network in igraph**\n\n```{r}\nlibrary(igraph)\nlibrary(ggraph)\nlibrary(tidygraph)\n```\n\n```{r}\nhemoglobin <- data.frame(from = c(\"ALPHA_GLOBIN\", \"ALPHA_GLOBIN\", \"BETA_GLOBIN\"), to = c(\"ALPHA_GLOBIN\", \"BETA_GLOBIN\", \"BETA_GLOBIN\"))\ng <- graph_from_data_frame(hemoglobin, directed = FALSE, vertices = NULL)\nplot(g)\n```\n\n-   Make sure you understand what the NODES (the circles) and the EDGES (the lines) represent: what is the BIOLOGICAL interpretation of the network?\n\n    In this protein-protein interaction graph, each node represents a protein and each edge represents interaction between them.\n\n**TASK: create data frame for the polymerase sub-unit interactions and add attributes to igraph object:**\n\n```{r}\npolymerase_subunit <- data.frame(from = c(\"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD3_HUMAN\"), to = c(\"DPOD2_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\", \"DPOD4_HUMAN\"))\nps_attr <- data.frame(name = c(\"DPOD1_HUMAN\", \"DPOD2_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\"), GeneID = c(\"PolD1\", \"PolD2\", \"PolD3\", \"PolD4\"), Catalytic = c(\"yes\", \"no\", \"no\", \"no\"), Description = c(\n    \"DNA polymerase delta catalytic subunit\",\n    \"DNA polymerase delta subunit 2\",\n    \"DNA polymerase delta subunit 3\",\n    \"DNA polymerase delta subunit 4\"\n), AA = c(1009, 469, 466, 107))\np <- graph_from_data_frame(polymerase_subunit, directed = FALSE, vertices = ps_attr)\nplot(p)\nV(p)$Description\n\n```\n\n**TASK - use the node annotations for customizing visualization**\n\n```{r}\nggraph(p) +\n    geom_edge_link() +\n    geom_node_point()\n\n```\n\nWay to visualize protein-protein interactions? Definetly not – not a lot of information is represented.\n\n```{r}\nggraph(p) + geom_edge_link() + geom_node_point(aes(colour = Catalytic, size = AA)) + geom_node_text(aes(label = name), repel = TRUE)\n```\n\n### **Extended Pol δ network**\n\nFor the final part of the exercise we'll be working with set of **experimental data** centered around the Pol δ complex. Later in the course we will learn a lot of details about how such experimental data is generated, what strengths and weaknesses the different methods have, and how we can address the noise in the data.\n\nFor now it sufficient to note the following:\n\n-   The experiment has detected proteins that physically interacts with the PolD1-PolD4 complex we have just worked with.\n\n-   Both **stable** and **transient** interactions have been identified.\n\n-   The experiment shows **some** of the most likely interactions - additional experiments may find more.\n\n-   The data **may** contain false positive (proteins indicated to interact, while that is not true under real biological conditions).\n\n```{r}\npoldelta_extented_interactions <- data.frame(from = c(\"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD1_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD2_HUMAN\", \"DPOD3_HUMAN\", \"DPOD3_HUMAN\", \"DPOD3_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\", \"DPOD4_HUMAN\", \"DPOD4_HUMAN\", \"DPOD4_HUMAN\", \"PRI1_HUMAN\", \"WRIP1_HUMAN\"), to = c(\"DPOD2_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\", \"S7A6O_HUMAN\", \"TREX2_HUMAN\", \"DNA2L_HUMAN\", \"PRI1_HUMAN\", \"PRI2_HUMAN\", \"WRIP1_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\", \"PDIP2_HUMAN\", \"BACD1_HUMAN\", \"WRIP1_HUMAN\", \"DNA2L_HUMAN\", \"PRI1_HUMAN\", \"PRI2_HUMAN\", \"DPOD4_HUMAN\", \"DNA2L_HUMAN\", \"PRI1_HUMAN\", \"PRI2_HUMAN\", \"DNA2L_HUMAN\", \"PRI1_HUMAN\", \"PRI2_HUMAN\", \"WRIP1_HUMAN\", \"PRI2_HUMAN\", \"WRIP1_HUMAN\"), confidence = c(1.00, 1.00, 1.00, 0.18, 1.00, 1.00, 1.00, 1.00, 0.52, 1.00, 1.00, 1.00, 1.00, 0.54, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.57, 1.00, 0.65))\ne <- graph_from_data_frame(poldelta_extented_interactions, directed = FALSE, vertices = NULL)\n\n\nggraph(e, layout = \"kk\") + geom_edge_link() + geom_node_point() + geom_node_label(aes(label = name), repel = TRUE)\n```\n\nLinear is not a suitable layout, because it loses out on clustering of interactions.\n\n**TASK - visualize the Node attributes**\n\n-   Node label - use GeneID\n\n-   Node color - color based on \"Role in replication\" (invent your own coloring scheme)\n\n-   Node shape - pick two shapes to represent whether the protein is known to bind to DNA\n\n    The graph design was done with ChatGPT this time.\n\n```{r}\nextended_attr <- data.frame(\n    name = c(\n        \"DPOD1_HUMAN\", \"DPOD2_HUMAN\", \"DPOD3_HUMAN\", \"DPOD4_HUMAN\",\n        \"BACD1_HUMAN\", \"DNA2L_HUMAN\", \"PDIP2_HUMAN\", \"PRI1_HUMAN\",\n        \"PRI2_HUMAN\", \"S7A6O_HUMAN\", \"TREX2_HUMAN\", \"WRIP1_HUMAN\"\n    ),\n    GeneID = c(\n        \"POLD1\", \"POLD2\", \"POLD3\", \"POLD4\",\n        \"PDIP1\", \"DNA2\", \"POLDIP2\", \"PRIM1\",\n        \"PRIM2\", \"SLC7A6OS\", \"TREX2\", \"WRNIP1\"\n    ),\n    Role_in_replication = c(\n        \"Polymerase\", \"Polymerase\", \"Polymerase\", \"Polymerase\",\n        \"Uncertain\", \"Helicase\", \"Uncertain\", \"Primase\",\n        \"Primase\", \"Uncertain\", \"DNA repair\", \"DNA repair\"\n    ),\n    Cellular_component = c(\n        \"Nucleus\", \"Nucleus\", \"Nucleus\", \"Nucleus\",\n        \"Nucleus\", \"Nucleus; Mitochondrion\", \"Nucleus\", \"Nucleus (Nucleoplasm)\",\n        \"Nucleus (Nucleoplasm)\", \"Nucleus\", \"Nucleus\", \"Nucleus\"\n    ),\n    DNA_Binding = c(\n        \"+\", \"+\", \"-\", \"-\",\n        \"-\", \"+\", \"+\", \"+\",\n        \"+\", \"-\", \"+\", \"-\"\n    ),\n    Description = c(\n        \"DNA polymerase delta catalytic subunit\",\n        \"DNA polymerase delta subunit 2\",\n        \"DNA polymerase delta subunit 3\",\n        \"DNA polymerase delta subunit 4\",\n        \"Polymerase delta-interacting protein 1\",\n        \"DNA replication helicase/nuclease 2\",\n        \"Polymerase delta-interacting protein 2\",\n        \"DNA primase small subunit\",\n        \"DNA primase large subunit\",\n        \"Probable RNA Pol II localization factor\",\n        \"3′→5′ exonuclease, DNA repair\",\n        \"Werner helicase-interacting protein 1\"\n    )\n)\n\ne <- graph_from_data_frame(poldelta_extented_interactions, directed = FALSE, vertices = extended_attr)\n\nggraph(e, layout = \"kk\") +\n\n    geom_edge_link() +\n\n    # NODES\n    geom_node_point(\n        aes(\n            colour = Role_in_replication,\n            shape  = DNA_Binding\n        ),\n        size = 6\n    ) +\n    geom_node_label(aes(label = GeneID), repel = TRUE, box.padding = 0.4) +\n\n    # Node color scheme\n    scale_colour_manual(values = c(\n        \"Polymerase\" = \"steelblue\",\n        \"Primase\"    = \"forestgreen\",\n        \"Helicase\"   = \"orange\",\n        \"DNA repair\" = \"purple\",\n        \"Uncertain\"  = \"gray40\"\n    ), na.translate = FALSE) +\n\n    # Node shape scheme (+ binds DNA, – does not)\n    scale_shape_manual(values = c(\"+\" = 16, \"-\" = 15), na.translate = FALSE) +\n\n    # Optional: hide edge legends\n    guides(edge_colour = \"none\", edge_alpha = \"none\", edge_width = \"none\") +\n\n    theme_void()\n\n```\n\nDoes it make sense that some of the proteins are not annotated to bind DNA yet are supposed to have a role in DNA replication? (For example DPOD3_HUMAN and DPOD4_HUMAN)\\\n\\\nYes, it does as some of these proteins are subunits of complexes that do bind DNA.\n\n\"**Catalytic vs accessory subunits**:\n\n-   *POLD1* (DPOD1_HUMAN) is the **catalytic subunit** of DNA polymerase δ, with DNA polymerase and exonuclease domains — it binds DNA directly.\n\n-   *POLD2, POLD3, POLD4* are **accessory subunits**. They don’t themselves have DNA-binding motifs but they **stabilize the catalytic subunit, anchor PCNA, or mediate interactions with other replication/repair factors**.\"\n\nEach edge in the Pol δ network represents a **protein-protein** interaction determined **experimentally**. A number of different pieces of information could potentially be associated with each interaction:\n\n-   Experimental method used.\n\n-   Whether the interaction is stable or transient.\n\n-   How much experimental support is there for the interactions (e.g. a single experiment, 3 experiments or 100+ experiments).\\\n\nYou may consider the following interpretation of the score:\n\n-   0.0 - 0.3 : poor experimental support\n\n-   0.3 - 0.9 : \"good enough\" experimental support\n\n-   0.9 - 1.0 : excellent experimental support\n\n**TASK - import and visualize network**\n\n-   Make an igraph object with the interactions, edge attributes, and node attributes\n\n-   Visualize the network with ggraph, adding some formatting of the edges continuously by the confidence score (color, width, or transparency are good options)\n\n-   Make a discrete vector based on the three categories above, and add reload the igraph object. Make three different colors, widths, line types, or whatever else you can come up with to make a visually pleasing and informative visualization.\n\n```{r}\nggraph(e, layout = \"kk\") +\n    geom_edge_link(\n        aes(\n            edge_colour = confidence,\n            edge_alpha = confidence,\n            edge_width = confidence\n        )\n    ) +\n    scale_edge_colour_gradientn(\n        colours = c(\"plum1\", \"mediumpurple3\", \"purple4\"),\n        values  = c(0, 0.3, 0.9, 1),\n        name    = \"Confidence\" # name for the edge colorbar\n    ) +\n    guides(edge_colour = guide_edge_colourbar(\n        title  = \"Confidence\",\n        ticks  = TRUE,\n        breaks = c(0.15, 0.6, 0.95),\n        labels = c(\"0.0–0.3 poor\", \"0.3–0.9 good\", \"0.9–1.0 excellent\")\n    )) +\n    scale_edge_alpha(range = c(0.2, 1)) +\n    scale_edge_width(range = c(0.3, 1.5)) +\n\n    # NODES\n    geom_node_point(aes(colour = Role_in_replication, shape = DNA_Binding), size = 6) +\n    geom_node_label(aes(label = GeneID), repel = TRUE, box.padding = 0.4) +\n    scale_colour_manual(values = c(\n        \"Polymerase\" = \"steelblue\",\n        \"Primase\"    = \"forestgreen\",\n        \"Helicase\"   = \"orange\",\n        \"DNA repair\" = \"purple\",\n        \"Uncertain\"  = \"gray40\"\n    ), na.translate = FALSE) +\n    scale_shape_manual(values = c(\"+\" = 16, \"-\" = 15), na.translate = FALSE) +\n    theme_void()\n\n```\n\nWhich do you prefer - continuous or discrete visualization of line colors? I prefer continuous\n\n**FINAL QUESTION - Re-evaluate the three \"uncertain\" proteins (BACD1_HUMAN, PDIP2_HUMAN, S7A6O_HUMAN)**:\n\nConsider the following points and make a conclusion based on the *combined evidence* on which of the three proteins are likely to be true interaction partners:\n\n-   The proteins they are interacting with.\n\n-   The experimental support for the interactions.\n\n-   Any biological information (any hints, basically) you may have picked up from skimming through the UniProt pages for each of the three proteins.\n\nBased on the experimental evidence, **BACD1_HUMAN, PDIP2_HUMAN** are true interaction partners. They both also interact with DPOD2_HUMAN, which is clearly involved. BACD1_HUMAN seems to be a co-factor for DPOD2_HUMAN. But **S7A6O_HUMAN** does not seem to be involved as the experimental support is very weak."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":{"dark":"dracula","light":"github"},"css":["../styles/fonts.css","../styles/styles.css"],"output-file":"week1-igraph.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.34","resources":["nbs/data/**"],"theme":{"dark":"darkly","light":"cosmo"},"mainfont":"Inter","monofont":"Menlo","code-copy":true,"grid":{"body-width":"1100px","gutter-width":"1rem"},"title":"Week 1: Introduction to igraph","date":"2025-09-04","description":"Learn the basics of network visualization with igraph for systems biology.","categories":["Basics","Visualization"],"image":"images/week1.png","editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}